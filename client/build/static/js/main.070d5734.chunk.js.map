{"version":3,"sources":["components/create-todo.component.js","components/edit-todo.component.js","components/todos-list.component.js","App.js","serviceWorker.js","index.js"],"names":["CreateTodo","props","onChangeTodoDescription","bind","onChangeTodoResponsible","onChangeTodoPriority","onSubmit","state","todo_description","todo_responsible","todo_priority","todo_completed","e","this","setState","target","value","preventDefault","console","log","style","marginTop","className","type","onChange","name","id","checked","Component","EditTodo","TodosList","App","href","to","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.070d5734.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class CreateTodo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\r\n        this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\r\n        this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            todo_description: '',\r\n            todo_responsible: '',\r\n            todo_priority: '',\r\n            todo_completed: false\r\n        }\r\n    }\r\n\r\n    onChangeTodoDescription(e) {\r\n        this.setState({\r\n            todo_description: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeTodoResponsible(e) {\r\n        this.setState({\r\n            todo_responsible: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeTodoPriority(e) {\r\n        this.setState({\r\n            todo_priority: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        console.log(`Form submitted:`);\r\n        console.log(`Todo Description: ${this.state.todo_description}`);\r\n        console.log(`Todo Responsible: ${this.state.todo_responsible}`);\r\n        console.log(`Todo Priority: ${this.state.todo_priority}`);\r\n\r\n        this.setState({\r\n            todo_description: '',\r\n            todo_responsible: '',\r\n            todo_priority: '',\r\n            todo_completed: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{marginTop: 10}}>\r\n                <h3>Create New Todo</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Description: </label>\r\n                        <input  type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={this.state.todo_description}\r\n                                onChange={this.onChangeTodoDescription}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Responsible: </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={this.state.todo_responsible}\r\n                            onChange={this.onChangeTodoResponsible}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\"\r\n                                    type=\"radio\"\r\n                                    name=\"priorityOptions\"\r\n                                    id=\"priorityLow\"\r\n                                    value=\"Low\"\r\n                                    checked={this.state.todo_priority==='Low'}\r\n                                    onChange={this.onChangeTodoPriority}\r\n                            />\r\n                            <label className=\"form-check-label\">Low</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\"\r\n                                    type=\"radio\"\r\n                                    name=\"priorityOptions\"\r\n                                    id=\"priorityMedium\"\r\n                                    value=\"Medium\"\r\n                                    checked={this.state.todo_priority==='Medium'}\r\n                                    onChange={this.onChangeTodoPriority}\r\n                            />\r\n                            <label className=\"form-check-label\">Medium</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input  className=\"form-check-input\"\r\n                                    type=\"radio\"\r\n                                    name=\"priorityOptions\"\r\n                                    id=\"priorityHigh\"\r\n                                    value=\"High\"\r\n                                    checked={this.state.todo_priority==='High'}\r\n                                    onChange={this.onChangeTodoPriority}\r\n                            />\r\n                            <label className=\"form-check-label\">High</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Create Todo\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class EditTodo extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Welcome to Edit Todo Component!!</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class TodosList extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Welcome to Todos List Component!!</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport CreateTodo from \"./components/create-todo.component\";\nimport EditTodo from \"./components/edit-todo.component\";\nimport TodosList from \"./components/todos-list.component\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <div className=\"container\">\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                        <a href=\"https://codingthesmartway.com\">\n                        </a>\n                        <Link to=\"/\" className=\"navbar-brand\">MERN-Stack Todo App</Link>\n                        <div className=\"collpase navbar-collapse\">\n                            <ul className=\"navbar-nav mr-auto\">\n                                <li className=\"navbar-item\">\n                                    <Link to=\"/\" className=\"nav-link\">Todos</Link>\n                                </li>\n                                <li className=\"navbar-item\">\n                                    <Link to=\"/create\" className=\"nav-link\">Create Todo</Link>\n                                </li>\n                            </ul>\n                        </div>\n                    </nav>\n                    <br/>\n                    <Route path=\"/\" exact component={TodosList} />\n                    <Route path=\"/edit/:id\" component={EditTodo} />\n                    <Route path=\"/create\" component={CreateTodo} />\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}